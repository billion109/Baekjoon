import sys
input = sys.stdin.readline

N, M = map(int, input().split())
tetromino_map = [list(map(int, input().split())) for _ in range(N)]
tetromino = [
    [[0, 0], [1, 0], [2, 0], [3, 0]],  # ㅡ
    [[0, 0], [0, 1], [0, 2], [0, 3]],  # ㅣ
    [[0, 0], [0, 1], [1, 0], [1, 1]],  # ㅁ
    [[0, 0], [1, 0], [2, 0], [1, -1]],  # ㅗ
    [[0, 0], [1, 0], [2, 0], [1, 1]],  # ㅜ
    [[0, 0], [0, 1], [0, 2], [-1, 1]],  # ㅓ
    [[0, 0], [0, 1], [0, 2], [1, 1]],  # ㅏ
    [[0, 0], [0, 1], [1, 1], [1, 2]],  # 번개 정방향 1
    [[0, 0], [1, 0], [1, -1], [2, -1]],  # 번개 정방향 2
    [[0, 0], [1, 0], [1, 1], [2, 1]],  # 번개 역방향 1
    [[0, 0], [0, -1], [1, -1], [1, -2]],  # 번개 역방향 2
    [[0, 0], [0, 1], [0, 2], [1, 2]],  # ㄴ 정방향 1
    [[0, 0], [1, 0], [2, 0], [2, -1]],  # ㄴ 정방향 2
    [[0, 0], [1, 0], [1, 1], [1, 2]],  # ㄴ 정방향 3
    [[0, 0], [1, 0], [2, 0], [0, 1]],  # ㄴ 정방향 4
    [[0, 0], [0, 1], [0, 2], [-1, 2]],  # ㄴ 역방향 1
    [[0, 0], [1, 0], [2, 0], [2, 1]],  # ㄴ 역방향 2
    [[0, 0], [1, 0], [0, 1], [0, 2]],  # ㄴ 역방향 3
    [[0, 0], [0, 1], [1, 1], [2, 1]],  # ㄴ 역방향 4
]

max_val = 0
for tetris in tetromino:
    for i in range(N):
        for j in range(M):
            pos_x = []
            pos_y = []
            for a, b in tetris:
                pos_x.append(a + i)
                pos_y.append(b + j)

            sum = 0
            for _ in range(4):
                if 0<=pos_x[_]<N and 0<=pos_y[_]<M:
                    sum+=tetromino_map[pos_x[_]][pos_y[_]]
                else:
                    break
            if sum>max_val:
                max_val = sum

print(max_val)